1:HL["/_next/static/css/a32443c79d2e16b1.css",{"as":"style"}]
0:[[["",{"children":["posts",{"children":[["slug","next-static-page-with-prism","d"],{"children":["__PAGE__?{\"slug\":\"next-static-page-with-prism\"}",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a32443c79d2e16b1.css","precedence":"next"}]],["$L3",null]]]]
4:HL["/_next/static/css/ee4270e994967e2c.css",{"as":"style"}]
5:I{"id":"8920","chunks":["920:static/chunks/920-4cc7de8e14e4b1e5.js","991:static/chunks/app/posts/page-58cb07f69bea0b12.js"],"name":"","async":false}
6:I{"id":"8707","chunks":["920:static/chunks/920-4cc7de8e14e4b1e5.js","707:static/chunks/707-de92662865eaa972.js","185:static/chunks/app/layout-88c7d45c3a7e81d5.js"],"name":"","async":false}
7:I{"id":"4463","chunks":["272:static/chunks/webpack-24a05590b2eee45f.js","667:static/chunks/2443530c-424cdbcd2566cb72.js","488:static/chunks/488-e94a566894f82f75.js"],"name":"","async":false}
8:I{"id":"1010","chunks":["272:static/chunks/webpack-24a05590b2eee45f.js","667:static/chunks/2443530c-424cdbcd2566cb72.js","488:static/chunks/488-e94a566894f82f75.js"],"name":"","async":false}
2:[["$","html",null,{"lang":"en","children":["$","body",null,{"children":[["$","header",null,{"className":"px-8 flex items-center","children":["$","$L5",null,{"href":"/","className":"flex items-center","children":[["$","div",null,{"className":"relative w-10 aspect-square mr-4","children":["$","$L6",null,{"src":"assets/images/codeverse_icon.png","fill":true,"alt":"icon of codeverse"}]}],["$","h1",null,{"className":"text-3xl font-bold","children":"Codeverse"}]]}]}],["$","aside",null,{"children":["$","ul",null,{"className":"px-5","children":[["$","li","0",{"className":"pt-4 border-b border-b-primary-900","children":["$","$L5",null,{"className":"block w-full h-fulltext-lg text-lg","href":"/posts","children":"Posts"}]}],["$","li","1",{"className":"pt-4 border-b border-b-primary-900","children":["$","$L5",null,{"className":"block w-full h-fulltext-lg text-lg","href":"/about","children":"About Me"}]}]]}]}],["$","main",null,{"className":"overflow-auto","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L8",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L8",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[[null,["$","div",null,{"className":"px-4","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children",["slug","next-static-page-with-prism","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L8",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L9",null],"segment":"__PAGE__?{\"slug\":\"next-static-page-with-prism\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ee4270e994967e2c.css","precedence":"next"}]]}]}]],null],"segment":["slug","next-static-page-with-prism","d"]},"styles":[]}],"segment":"posts"},"styles":[]}]}]]}]}],null]
3:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"Create Next App"}],["$","meta",null,{"name":"description","content":"Generated by create next app"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
9:[null,["$","article",null,{"children":[["$","div",null,{"className":"text-4xl font-bold text-center p-10 mb-3 sticky top-0 bg-background-primary-50","children":"[test post]Prism with Next.js"}],["$","div",null,{"className":"markdown-body post","dangerouslySetInnerHTML":{"__html":"<h1 id=\"using-prism-with-nextjs\" class=\"heading\">Using Prism with Next.js</h1>\n<p><a href=\"https://prismjs.com/\" target=\"_blank\" rel=\"noopener noreferer\"><strong>Prism</strong></a> is a popular syntax highlighter commonly used with Markdown.\nThis example shows how to use Prism with <a href=\"https://nextjs.org/\" target=\"_blank\" rel=\"noopener noreferer\"><strong>Next.js</strong></a>. Use the theme dropdown\nin the header to switch syntax highlighting themes.</p>\n<p>Next.js uses <code>getStaticPaths</code>/<code>getStaticProps</code> to generate <a href=\"https://nextjs.org/docs/basic-features/data-fetching\" target=\"_blank\" rel=\"noopener noreferer\">static pages</a>. These functions are <em>not</em> bundled client-side, so you can <strong>write server-side code directly</strong>. For example, you can read Markdown files from the filesystem (<code>fs</code>) â€“ including parsing front matter with <a href=\"https://github.com/jonschlinkert/gray-matter\" target=\"_blank\" rel=\"noopener noreferer\">gray-matter</a>. For example, let's assume you have a Markdown file located at <code>docs/my-post.js</code>.</p>\n<p>We can retrieve that file's contents using <code>getDocBySlug('my-post')</code>.</p>\n<pre class=\"language-js\"><code class=\"language-js code-highlight\"><span class=\"code-line\"><span class=\"token comment\">// lib/docs.js</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">fs</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'fs'</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> join <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">matter</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'gray-matter'</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getDocBySlug</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">slug</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> realSlug <span class=\"token operator\">=</span> slug<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token special-escape escape\">\\.</span>md<span class=\"token anchor function\">$</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> docsDirectory <span class=\"token operator\">=</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'docs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> fullPath <span class=\"token operator\">=</span> <span class=\"token function\">join</span><span class=\"token punctuation\">(</span>docsDirectory<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>realSlug<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.md</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> fileContents <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readFileSync</span><span class=\"token punctuation\">(</span>fullPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> content <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">matter</span><span class=\"token punctuation\">(</span>fileContents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">slug</span><span class=\"token operator\">:</span> realSlug<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">meta</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">,</span> content <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre>\n<p>Then, we can <strong>transform</strong> the raw Markdown into HTML using <a href=\"https://github.com/remarkjs/remark\" target=\"_blank\" rel=\"noopener noreferer\">remark</a> plugins.</p>\n<pre class=\"language-js\"><code class=\"language-js code-highlight\"><span class=\"code-line\"><span class=\"token comment\">// lib/markdown.js</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">remark</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'remark'</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">html</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'remark-html'</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">prism</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'remark-prism'</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">markdownToHtml</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">markdown</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">remark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span>prism<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">process</span><span class=\"token punctuation\">(</span>markdown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre>\n<p>Passing the <code>content</code> returned by <code>getDocBySlug('my-post')</code> into <code>markdownToHtml(content)</code>\nwould convert a Markdown file like this:</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown code-highlight\"><span class=\"code-line\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n</span></span><span class=\"code-line\"><span class=\"token front-matter-block\"><span class=\"token front-matter yaml language-yaml\"><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'My First Post'</span>\n</span></span></span><span class=\"code-line\"><span class=\"token front-matter-block\"><span class=\"token front-matter yaml language-yaml\"><span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'My very first blog post'</span></span>\n</span></span><span class=\"code-line\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span></span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> My First Post</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">I <span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">love</span><span class=\"token punctuation\">**</span></span> using <span class=\"token url\">[<span class=\"token content\">Next.js</span>](<span class=\"token url\">https://nextjs.org/</span>)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">js</span>\n</span></span><span class=\"code-line\"><span class=\"token code\"><span class=\"token code-block language-js\"><span class=\"token keyword\">const</span> doc <span class=\"token operator\">=</span> <span class=\"token function\">getDocBySlug</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span><span class=\"token property-access\">slug</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n</span></span><span class=\"code-line\"><span class=\"token code\"><span class=\"token punctuation\">```</span></span>\n</span></code></pre>\n<p>into this HTML, which includes the proper elements and class names.</p>\n<pre class=\"language-html\"><code class=\"language-html code-highlight\"><span class=\"code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>h1</span><span class=\"token punctuation\">></span></span>My First Post<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>h1</span><span class=\"token punctuation\">></span></span>\n</span><span class=\"code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>p</span><span class=\"token punctuation\">></span></span>I <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>strong</span><span class=\"token punctuation\">></span></span>love<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>strong</span><span class=\"token punctuation\">></span></span> using <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://nextjs.org/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Next.js<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>p</span><span class=\"token punctuation\">></span></span>\n</span><span class=\"code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>remark-highlight<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n</span><span class=\"code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>pre</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>language-js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n</span><span class=\"code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>code</span><span class=\"token punctuation\">></span></span>\n</span><span class=\"code-line\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>token keyword<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>const<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>span</span><span class=\"token punctuation\">></span></span> doc <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>token operator<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>=<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>span</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>token function<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>getDocBySlug<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>token punctuation<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>(<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>span</span><span class=\"token punctuation\">></span></span>params<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>token punctuation<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>token property-access<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>slug<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>token punctuation<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>token punctuation<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>span</span><span class=\"token punctuation\">></span></span>\n</span><span class=\"code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>code</span><span class=\"token punctuation\">></span></span>\n</span><span class=\"code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>pre</span><span class=\"token punctuation\">></span></span>\n</span><span class=\"code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n</span></code></pre>\n<h2 id=\"deploy-your-own\" class=\"heading\">Deploy Your Own</h2>\n<p>View the <a href=\"https://github.com/leerob/nextjs-prism-markdown\" target=\"_blank\" rel=\"noopener noreferer\"><strong>source code</strong></a> and deploy your own. You can add new Markdown files to <code>docs/</code> and see them live instantly!</p>"}}]]}]]
