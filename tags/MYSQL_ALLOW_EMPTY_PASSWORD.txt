1:HL["/_next/static/css/9674fbd74573baf2.css",{"as":"style"}]
0:[[["",{"children":["tags",{"children":[["tag","MYSQL_ALLOW_EMPTY_PASSWORD","d"],{"children":["__PAGE__?{\"tag\":\"MYSQL_ALLOW_EMPTY_PASSWORD\"}",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/9674fbd74573baf2.css","precedence":"next"}]],["$L3",null]]]]
4:I{"id":"1616","chunks":["771:static/chunks/771-a273996dc83f4cad.js","274:static/chunks/274-31a5843dc341abd2.js","964:static/chunks/964-3fbb84800944960d.js","925:static/chunks/925-98b9640d621f887a.js","222:static/chunks/222-8be30348cbe4dffe.js","185:static/chunks/app/layout-6cdfa5accf696248.js"],"name":"","async":false}
5:I{"id":"4463","chunks":["272:static/chunks/webpack-6c88f117227a55df.js","667:static/chunks/2443530c-b37977cb0d35fe50.js","488:static/chunks/488-754b8491efac4835.js"],"name":"","async":false}
6:I{"id":"1010","chunks":["272:static/chunks/webpack-6c88f117227a55df.js","667:static/chunks/2443530c-b37977cb0d35fe50.js","488:static/chunks/488-754b8491efac4835.js"],"name":"","async":false}
7:I{"id":"5568","chunks":["771:static/chunks/771-a273996dc83f4cad.js","274:static/chunks/274-31a5843dc341abd2.js","640:static/chunks/640-89e60937cc8073ce.js","605:static/chunks/app/tags/[tag]/page-da036b129eb98df8.js"],"name":"","async":false}
8:I{"id":"6640","chunks":["771:static/chunks/771-a273996dc83f4cad.js","274:static/chunks/274-31a5843dc341abd2.js","640:static/chunks/640-89e60937cc8073ce.js","605:static/chunks/app/tags/[tag]/page-da036b129eb98df8.js"],"name":"","async":false}
2:[["$","$L4",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children",["tag","MYSQL_ALLOW_EMPTY_PASSWORD","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[[["$","$L7",null,{"tag":"MYSQL_ALLOW_EMPTY_PASSWORD","count":1}],["$","ol",null,{"children":[["$","$L8","0",{"post":{"slug":"mysql-dockerize","meta":{"title":"mysql dockerize(1) - 도커로 mysql container 띄우기","date":"2021/11/07","description":"내 로컬 환경은 소중하니까","tags":["MYSQL_ALLOW_EMPTY_PASSWORD","MYSQL_RANDOM_ROOT_PASSWORD","MYSQL_ROOT_PASSWORD","container","docker","mysql"],"thumbnail":"assets/images/posts/mysql-dockerize.jpeg"},"content":"\n최근 작업 중 DB에 스키마 변경을 가하면 DB랑 로컬 개발 환경이 함께 쭉 드러누워버리는 일이 자주 발생합니다. 로컬에서 돌리고 있던 mysql을 격리시켜버리기로 결심했습니다.\n\n## 시작점\n\n저는 DB로 mysql을 쓰고있고, ROR로 프로젝트를 진행하고 있습니다. 로컬 환경에 mysql server를 설치해 쓰고있었고, Docker는 이미 깔려있습니다.\n\n## 도커로 mysql container 띄우기\n\n### mysql 이미지 가져오기\n\n먼저 mysql 이미지를 가져옵니다.\n\n```shell\n$ docker pull mysql\n\nUsing default tag: latest\nlatest: Pulling from library/mysql\n...\n...\nDigest: ...\nStatus: Downloaded newer image for mysql:latest\ndocker.io/library/mysql:latest\n```\n\nlts버젼의 mysql 이미지가 로드됩니다.\n\n### mysql 이미지를 컨테이너로 실행하기\n\n로드한 이미지를 컨테이너로 실행해봅니다.\n\n```shell\n$ docker run mysql\n\n2021-11-07 07:55:25+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.27-1debian10 started.\n2021-11-07 07:55:25+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'\n2021-11-07 07:55:25+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.27-1debian10 started.\n2021-11-07 07:55:25+00:00 [ERROR] [Entrypoint]: Database is uninitialized and password option is not specified\n    You need to specify one of the following:\n    - MYSQL_ROOT_PASSWORD\n    - MYSQL_ALLOW_EMPTY_PASSWORD\n    - MYSQL_RANDOM_ROOT_PASSWORD\n```\n\n에러가 뜹니다. mysql 컨테이너는 root 유저의 password를 어떻게 할 것인지에 대해 옵션을 명시해야 한다고 합니다. 아래 3개의 항목 중 하나를 선택해 컨테이너 안에 환경변수로 넘겨 줍니다.\n\n```shell\n$ docker run mysql -e MYSQL_ROOT_PASSWORD=1234\n# 또는\n$ docker run mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=abcd\n# 또는\n$ docker run mysql -e MYSQL_RANDOM_ROOT_PASSWORD=abcd\n```\n\n저는 root password를 지정해주었습니다. password를 설정하지 않는 `MYSQL_ALLOW_EMPTY_PASSWORD` 옵션이나 `MYSQL_RANDOM_ROOT_PASSWORD` 옵션도 환경변수 안에 어떤 값이든 담아주어야 동작합니다. 실제로 해당 값이 영향을 끼치지는 않습니다.\n\nrandom 옵션은 아래와 같이 실행 로그에서 비밀번호를 알려줍니다.\n\n```shell\n2021-11-07 07:55:40+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.27-1debian10 started.\n2021-11-07 07:55:40+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'\n...\n...\n2021-11-07 07:55:48+00:00 [Note] [Entrypoint]: GENERATED ROOT PASSWORD: ojai1toovee3jahC4ooh7on8ahjoo0ji\n...\n2021-11-07 07:55:50+00:00 [Note] [Entrypoint]: MySQL init process done. Ready for start up.\n...\n2021-11-07T07:55:51.690474Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: '::' port: 33060, socket: /var/run/mysqld/mysqlx.sock\n2021-11-07T07:55:51.690582Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.27'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server - GPL.\n```\n\n컨테이너가 잘 떴는지 확인해봅니다.\n\n```shell\n$ docker ps\n\nCONTAINER ID   IMAGE      COMMAND                  CREATED         STATUS          PORTS                    NAMES\nddb780457980   mysql      \"docker-entrypoint.s…\"   4 minutes ago   Up 4 minutes    3306/tcp, 33060/tcp      musing_dewdney\n```\n\n### 컨테이너 실행 결과 확인하기\n\n터미널 창을 하나 더 켜고, 아래 명령어로 방금 띄운 mysql 컨테이너에 접속해 볼 수 있습니다. 지정한 비밀번호로 mysql 클라이언트도 잘 접속이 됩니다.\n\n```shell\n$ docker exec -it musing_dewdney bash\n\nroot@ddb780457980:/# mysql -uroot -p1234\n\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 9\nServer version: 8.0.27 MySQL Community Server - GPL\n\nCopyright (c) 2000, 2021, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql>\n```\n\n### 옵션 추가\n\nmysql 서버는 항상 돌아가고 있어야 하므로 데몬 환경으로 실행하는 것이 일반적입니다. 그리고 편하게 접근하기 위해서 임의로 컨테이너에 네임도 붙이고 싶습니다.\n띄워놓은 컨테이너를 정지, 삭제 하고 몇가지 옵션을 추가해 새로 띄워봅니다.\n\n```shell\n$ docker kill musing_dewdney\n\n$ docker rm musing_dewdney\n\n$ docker run --name mysql -e MYSQL_ROOT_PASSWORD=1234 -d mysql\n```\n\n성공하였다면 아까와 같이 컨테이너 안에 접속하여 확인할 수 있습니다.\n\n```\n$ docker exec -it mysql bash\n```\n"},"hasThumbnail":false}]]}]],null],"segment":"__PAGE__?{\"tag\":\"MYSQL_ALLOW_EMPTY_PASSWORD\"}"},"styles":[]}],"segment":["tag","MYSQL_ALLOW_EMPTY_PASSWORD","d"]},"styles":[]}],"segment":"tags"},"styles":[]}],"params":{}}],null]
3:[[["$","meta",null,{"charSet":"utf-8"}],null,null,null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
